generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Restaurant {
  id              String     @id @default(cuid())
  name            String
  email           String     @unique
  password        String
  phone           String?
  address         String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  stripeAccountId String?    @unique
  stripeOnboarded Boolean?   @default(false)
  menuItems       MenuItem[]
  orders          Order[]
  tables          Table[]
}

model Table {
  id           String     @id @default(cuid())
  number       Int
  capacity     Int?
  qrCode       String     @unique
  restaurantId String
  createdAt    DateTime   @default(now())
  orders       Order[]
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])

  @@unique([restaurantId, number])
}

model MenuItem {
  id           String      @id @default(cuid())
  name         String
  description  String?
  price        Float
  category     String
  available    Boolean     @default(true)
  imageUrl     String?
  restaurantId String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  restaurant   Restaurant  @relation(fields: [restaurantId], references: [id])
  orderItems   OrderItem[]
}

model Order {
  id            String      @id @default(cuid())
  customerName  String?
  customerEmail String?
  status        OrderStatus @default(PENDING)
  total         Float
  tableId       String
  restaurantId  String
  paymentId     String?
  deviceId      String?     // For tracking orders by device
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  restaurant    Restaurant  @relation(fields: [restaurantId], references: [id])
  table         Table       @relation(fields: [tableId], references: [id])
  orderItems    OrderItem[]
}

model OrderItem {
  id         String   @id @default(cuid())
  quantity   Int
  price      Float
  comments   String?
  orderId    String
  menuItemId String
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  order      Order    @relation(fields: [orderId], references: [id])
}

enum OrderStatus {
  PENDING
  PENDING_CASH_PAYMENT
  CONFIRMED
  PREPARING
  READY
  DELIVERED
  CANCELLED
}
