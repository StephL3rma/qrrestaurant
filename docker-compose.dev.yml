version: '3.8'

services:
  # Base de datos PostgreSQL para desarrollo
  postgres:
    image: postgres:15-alpine
    container_name: qr-restaurant-dev-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: qrrestaurant
      POSTGRES_USER: qruser
      POSTGRES_PASSWORD: DevPassword123
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    networks:
      - qr-dev-network

  # Aplicaci√≥n Next.js en modo desarrollo
  app:
    build:
      context: .
      target: development
    container_name: qr-restaurant-dev-app
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://qruser:DevPassword123@postgres:5432/qrrestaurant
      - NEXTAUTH_URL=http://31.220.31.19:3003
      - NEXTAUTH_SECRET=development-secret-32-chars-long
      - NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_51Rw6JgCKa9K8LC0JHB81KmeZFVfnaL3qPVJj5HuJjAnipCqNqtPGKZE660UViSGz5uR9Rlsuz79UyzzYyvpsq7sZ00K4H9C38s
      - STRIPE_SECRET_KEY=sk_test_51Rw6JgCKa9K8LC0JkS8gLJF4w8KJw7c1VCOoLKbM7dGf0rUdCm7xzQqQvBb5rvH2NzQXmWmCm9LZzQZqZjBvL6yz00K8X4Q2f
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3002:3000"
    networks:
      - qr-dev-network
    # Hot reload para desarrollo
    command: npm run dev

  # Nginx para desarrollo con SSL
  nginx:
    image: nginx:alpine
    container_name: qr-restaurant-dev-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "3003:80"
      - "443:443"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - qr-dev-network

volumes:
  postgres_dev_data:

networks:
  qr-dev-network:
    driver: bridge